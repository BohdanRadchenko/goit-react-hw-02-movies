{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MovieGrid/MovieGrid.js","components/SearchBar/SearchBar.js","components/App.js","index.js"],"names":["MovieCard","_ref","title","posterUrl","overview","react_default","a","createElement","className","styles","src","alt","conent","descr","MovieGrid","items","map","el","key","id","components_MovieCard_MovieCard","SearchBar","getSearch","input","type","onChange","e","target","value","App","state","_this","props","searchValue","setState","_this$state","this","filterFilm","filter","toLowerCase","includes","components_SearchBar_SearchBar","components_MovieGrid_MovieGrid","length","Component","ReactDOM","render","components_App","movies","document","getElementById"],"mappings":"u3aAwBeA,EAnBG,SAAAC,GAAoC,IAAjCC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,SACrC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOT,WACrBK,EAAAC,EAAAC,cAAA,OAAKG,IAAKP,EAAWQ,IAAKT,IAC1BG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOG,QACrBP,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOP,OAAQA,GAC9BG,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOI,OAAQT,sBCiBtBU,EAvBG,SAAAb,GAAe,IAAZc,EAAYd,EAAZc,MACnB,OACEV,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOK,WACnBC,EAAMC,IAAI,SAAAC,GAAE,OACXZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKD,EAAGE,IACVd,EAAAC,EAAAC,cAACa,EAAcH,wBCQVI,EAZG,SAAApB,GAAmB,IAAhBqB,EAAgBrB,EAAhBqB,UACnB,OACEjB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACEC,UAAWC,IAAOc,MAClBC,KAAK,OACLC,SAAU,SAAAC,GAAC,OAAIJ,EAAUI,EAAEC,OAAOC,YCyC3BC,6MA5BbC,MAAQ,CACNf,MAAOgB,EAAKC,MAAMjB,MAClBkB,YAAa,MAGfX,UAAY,SAAAM,GACVG,EAAKG,SAAS,SAAAJ,GAAK,MAAK,CACtBG,YAAaL,8EAIR,IA7BcA,EA6BdO,EACwBC,KAAKN,MAA5Bf,EADDoB,EACCpB,MAAOkB,EADRE,EACQF,YACTI,GA/BeT,EA+BcK,EAAPlB,EA9BjBuB,OAAO,SAAArB,GAAE,OACpBA,EAAGf,MAAMqC,cAAcC,SAASZ,EAAMW,kBA8BtC,OACElC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAD,CAAWnB,UAAWc,KAAKd,YAC3BjB,EAAAC,EAAAC,cAACmC,EAAD,CAAW3B,MAAOsB,IACK,IAAtBA,EAAWM,QACVtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0CAhCMqC,aCRlBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,CAAKhC,MAAOiC,IAAYC,SAASC,eAAe","file":"static/js/main.246f9c03.chunk.js","sourcesContent":["/*eslint-disable*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\n\nconst MovieCard = ({ title, posterUrl, overview }) => {\n  return (\n    <div className={styles.MovieCard}>\n      <img src={posterUrl} alt={title} />\n      <div className={styles.conent}>\n        <h2 className={styles.title}>{title}</h2>\n        <p className={styles.descr}>{overview}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  posterUrl: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n};\n\nexport default MovieCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from '../MovieCard/MovieCard';\nimport styles from './MovieGrid.module.css';\n\nconst MovieGrid = ({ items }) => {\n  return (\n    <ul className={styles.MovieGrid}>\n      {items.map(el => (\n        <li key={el.id}>\n          <MovieCard {...el} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieGrid.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      posterUrl: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default MovieGrid;\n","/*eslint-disable*/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\n\nconst SearchBar = ({ getSearch }) => {\n  return (\n    <form>\n      <input\n        className={styles.input}\n        type=\"text\"\n        onChange={e => getSearch(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","/*eslint-disable */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieGrid from './MovieGrid/MovieGrid';\nimport SearchBar from './SearchBar/SearchBar';\n\nconst findFilm = (array, value) => {\n  return array.filter(el =>\n    el.title.toLowerCase().includes(value.toLowerCase()),\n  );\n};\n\nclass App extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        posterUrl: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n  };\n\n  state = {\n    items: this.props.items,\n    searchValue: '',\n  };\n\n  getSearch = value => {\n    this.setState(state => ({\n      searchValue: value,\n    }));\n  };\n\n  render() {\n    const { items, searchValue } = this.state;\n    const filterFilm = findFilm(items, searchValue);\n    return (\n      <div>\n        <SearchBar getSearch={this.getSearch} />\n        <MovieGrid items={filterFilm} />\n        {filterFilm.length === 0 && (\n          <div>\n            <p>No matching results!</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport movies from './assets/movies.json';\nimport App from './components/App';\n\nReactDOM.render(<App items={movies} />, document.getElementById('root'));\n"],"sourceRoot":""}